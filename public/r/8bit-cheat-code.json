{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "8bit-cheat-code",
  "type": "registry:component",
  "title": "8-bit Cheat Code",
  "description": "An interactive Konami cheat code block",
  "registryDependencies": [
    "alert",
    "card"
  ],
  "files": [
    {
      "path": "components/ui/8bit/blocks/cheat-code.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n  ArrowDown,\r\n  ArrowLeft,\r\n  ArrowRight,\r\n  ArrowUp,\r\n  Sparkles,\r\n} from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport { Alert, AlertDescription } from \"@/components/ui/8bit/alert\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/8bit/card\";\r\n\r\nconst KONAMI_SEQUENCE: Array<string> = [\r\n  \"ArrowUp\",\r\n  \"ArrowUp\",\r\n  \"ArrowDown\",\r\n  \"ArrowDown\",\r\n  \"ArrowLeft\",\r\n  \"ArrowRight\",\r\n  \"ArrowLeft\",\r\n  \"ArrowRight\",\r\n  \"b\",\r\n  \"a\",\r\n  \"Enter\",\r\n];\r\n\r\nfunction getIconForKey(key: string) {\r\n  switch (key) {\r\n    case \"ArrowUp\":\r\n      return <ArrowUp className=\"size-4\" />;\r\n    case \"ArrowDown\":\r\n      return <ArrowDown className=\"size-4\" />;\r\n    case \"ArrowLeft\":\r\n      return <ArrowLeft className=\"size-4\" />;\r\n    case \"ArrowRight\":\r\n      return <ArrowRight className=\"size-4\" />;\r\n    case \"Enter\":\r\n      return <span className=\"text-[10px]\">START</span>;\r\n    case \"a\":\r\n    case \"b\":\r\n      return <span className=\"text-[10px] uppercase\">{key}</span>;\r\n    default:\r\n      return <span className=\"text-[10px]\">{key}</span>;\r\n  }\r\n}\r\n\r\nexport default function CheatCode({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  const [progress, setProgress] = React.useState<number>(0);\r\n  const [activated, setActivated] = React.useState<boolean>(false);\r\n  const resetTimerRef = React.useRef<number | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (activated) return;\r\n\r\n      const key = event.key.length === 1 ? event.key.toLowerCase() : event.key;\r\n      const expected = KONAMI_SEQUENCE[progress];\r\n\r\n      // Reset inactivity timer\r\n      if (resetTimerRef.current) window.clearTimeout(resetTimerRef.current);\r\n      resetTimerRef.current = window.setTimeout(() => setProgress(0), 2000);\r\n\r\n      if (key === expected) {\r\n        const next = progress + 1;\r\n        setProgress(next);\r\n\r\n        if (next === KONAMI_SEQUENCE.length) {\r\n          setActivated(true);\r\n          if (resetTimerRef.current) window.clearTimeout(resetTimerRef.current);\r\n        }\r\n      } else {\r\n        // Allow overlapping prefix (e.g., pressing Up when sequence starts with Up)\r\n        if (key === KONAMI_SEQUENCE[0]) {\r\n          setProgress(1);\r\n        } else {\r\n          setProgress(0);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      if (resetTimerRef.current) window.clearTimeout(resetTimerRef.current);\r\n    };\r\n  }, [activated, progress]);\r\n\r\n  const reset = () => {\r\n    setActivated(false);\r\n    setProgress(0);\r\n  };\r\n\r\n  return (\r\n    <Card className={cn(className)} {...props}>\r\n      <CardHeader className=\"items-center text-center gap-2\">\r\n        <CardTitle>Cheat Code</CardTitle>\r\n        <CardDescription>Try the classic code on your keyboard</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"flex flex-col items-center gap-6\">\r\n        <div className=\"grid grid-cols-6 sm:grid-cols-11 gap-2\">\r\n          {KONAMI_SEQUENCE.map((k, i) => (\r\n            <div\r\n              key={i}\r\n              className={cn(\r\n                \"relative flex h-10 w-10 items-center justify-center bg-secondary text-secondary-foreground\",\r\n                \"border-2 border-foreground dark:border-ring\",\r\n                progress > i && \"bg-primary text-primary-foreground\"\r\n              )}\r\n              aria-label={`step-${i + 1}`}\r\n            >\r\n              {getIconForKey(k)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {activated ? (\r\n          <Alert className=\"w-full max-w-md text-center px-4 py-3\">\r\n            <AlertDescription className=\"flex items-center justify-center gap-2\">\r\n              <Sparkles className=\"size-4\" />\r\n              Cheat activated! Extra retro vibes unlocked.\r\n            </AlertDescription>\r\n          </Alert>\r\n        ) : (\r\n          <Alert className=\"w-full max-w-md text-center px-4 py-3\">\r\n            <AlertDescription>\r\n              Press the sequence shown above. Progress resets after inactivity.\r\n            </AlertDescription>\r\n          </Alert>\r\n        )}\r\n\r\n        {activated && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={reset}\r\n            className={cn(\r\n              \"rounded-none relative inline-flex items-center justify-center gap-1.5\",\r\n              \"px-4 py-2 bg-foreground text-background active:translate-y-1\"\r\n            )}\r\n          >\r\n            Reset\r\n            <div className=\"absolute -top-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute -top-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute -bottom-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute -bottom-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute top-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute top-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute bottom-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute bottom-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute top-1.5 -left-1.5 h-2/3 w-1.5 bg-foreground dark:bg-ring\" />\r\n            <div className=\"absolute top-1.5 -right-1.5 h-2/3 w-1.5 bg-foreground dark:bg-ring\" />\r\n          </button>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/blocks/cheat-code.tsx"
    },
    {
      "path": "components/ui/8bit/alert.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport {\r\n  Alert as ShadcnAlert,\r\n  AlertDescription as ShadcnAlertDescription,\r\n  AlertTitle as ShadcnAlertTitle,\r\n} from \"@/components/ui/alert\";\r\n\r\nexport const alertVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n    variant: {\r\n      default: \"bg-card text-card-foreground\",\r\n      destructive:\r\n        \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nexport interface BitAlertProps\r\n  extends React.ComponentProps<\"div\">,\r\n    VariantProps<typeof alertVariants> {}\r\n\r\nfunction Alert({ children, ...props }: BitAlertProps) {\r\n  const { variant, className, font } = props;\r\n\r\n  return (\r\n    <div className={cn(\"relative\", className)}>\r\n      <ShadcnAlert\r\n        {...props}\r\n        variant={variant}\r\n        className={cn(\r\n          \"relative rounded-none border-none bg-background\",\r\n          font !== \"normal\" && \"retro\",\r\n          className\r\n        )}\r\n      >\r\n        {children}\r\n      </ShadcnAlert>\r\n\r\n      <div className=\"absolute -top-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute -top-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute -bottom-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute -bottom-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute top-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute top-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute bottom-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute bottom-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute top-1.5 -left-1.5 h-1/2 w-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute bottom-1.5 -left-1.5 h-1/2 w-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute top-1.5 -right-1.5 h-1/2 w-1.5 bg-foreground dark:bg-ring\" />\r\n      <div className=\"absolute bottom-1.5 -right-1.5 h-1/2 w-1.5 bg-foreground dark:bg-ring\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AlertTitle({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <ShadcnAlertTitle\r\n      className={cn(\"line-clamp-1 font-medium tracking-tight\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AlertDescription({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <ShadcnAlertDescription\r\n      className={cn(\r\n        \"text-muted-foreground grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Alert, AlertTitle, AlertDescription };\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/alert.tsx"
    },
    {
      "path": "components/ui/8bit/card.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport {\r\n  Card as ShadcnCard,\r\n  CardAction as ShadcnCardAction,\r\n  CardContent as ShadcnCardContent,\r\n  CardDescription as ShadcnCardDescription,\r\n  CardFooter as ShadcnCardFooter,\r\n  CardHeader as ShadcnCardHeader,\r\n  CardTitle as ShadcnCardTitle,\r\n} from \"@/components/ui/card\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const cardVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    font: \"retro\",\r\n  },\r\n});\r\n\r\nexport interface BitCardProps\r\n  extends React.ComponentProps<\"div\">,\r\n    VariantProps<typeof cardVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction Card({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"relative border-y-6 border-foreground dark:border-ring !p-0\",\r\n        className\r\n      )}\r\n    >\r\n      <ShadcnCard\r\n        {...props}\r\n        className={cn(\r\n          \"rounded-none border-0 !w-full\",\r\n          font !== \"normal\" && \"retro\",\r\n          className\r\n        )}\r\n      />\r\n\r\n      <div\r\n        className=\"absolute inset-0 border-x-6 -mx-1.5 border-foreground dark:border-ring pointer-events-none\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CardHeader({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardHeader\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardTitle({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardTitle\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardDescription({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardDescription\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardAction({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardAction\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardContent({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardContent\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardFooter({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardFooter\r\n      data-slot=\"card-footer\"\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n};\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/card.tsx"
    },
    {
      "path": "components/ui/8bit/styles/retro.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\r\n\r\n.retro {\r\n  font-family:\r\n    \"Press Start 2P\",\r\n    system-ui,\r\n    -apple-system,\r\n    sans-serif;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/styles/retro.css"
    }
  ]
}