{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "8bit-login-page",
  "type": "registry:component",
  "title": "8-bit Login Page",
  "description": "A simple 8-bit login page component",
  "registryDependencies": [
    "button",
    "card",
    "input",
    "label"
  ],
  "files": [
    {
      "path": "app/login/page.tsx",
      "content": "import { GalleryVerticalEnd } from \"lucide-react\";\r\n\r\nimport { LoginForm } from \"@/components/ui/8bit/blocks/login-form\";\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <div className=\"grid min-h-svh lg:grid-cols-2\">\r\n      <div className=\"flex flex-col gap-4 p-6 md:p-10\">\r\n        <div className=\"flex justify-center gap-2 md:justify-start\">\r\n          <a href=\"#\" className=\"flex items-center gap-2 font-medium\">\r\n            <div className=\"bg-primary text-primary-foreground flex size-6 items-center justify-center rounded-md\">\r\n              <GalleryVerticalEnd className=\"size-4\" />\r\n            </div>\r\n            Acme Inc.\r\n          </a>\r\n        </div>\r\n        <div className=\"flex flex-1 items-center justify-center\">\r\n          <div className=\"w-full max-w-md\">\r\n            <LoginForm />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-muted relative hidden lg:block\">\r\n        <img\r\n          src=\"/placeholder.svg\"\r\n          alt=\"Image\"\r\n          className=\"absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "app/login/page.tsx"
    },
    {
      "path": "components/ui/8bit/blocks/login-form.tsx",
      "content": "import { cn } from \"@/lib/utils\";\r\n\r\nimport { Button } from \"@/components/ui/8bit/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/8bit/card\";\r\nimport { Input } from \"@/components/ui/8bit/input\";\r\nimport { Label } from \"@/components/ui/8bit/label\";\r\n\r\nexport function LoginForm({\r\n  className,\r\n  ...props\r\n}: React.ComponentPropsWithoutRef<\"div\">) {\r\n  return (\r\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-2xl\">Login</CardTitle>\r\n          <CardDescription className=\"text-xs\">\r\n            Enter your email below to login to your account\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form>\r\n            <div className=\"flex flex-col gap-6\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"m@example.com\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-2\">\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"inline-block text-xs underline-offset-4 hover:underline\"\r\n                  >\r\n                    Forgot password?\r\n                  </a>\r\n                </div>\r\n                <Input id=\"password\" type=\"password\" required />\r\n              </div>\r\n              <Button type=\"submit\" className=\"w-full\">\r\n                Login\r\n              </Button>\r\n              <Button variant=\"outline\" className=\"w-full\">\r\n                Login with Google\r\n              </Button>\r\n            </div>\r\n            <div className=\"mt-4 text-center text-xs\">\r\n              Don&apos;t have an account?{\" \"}\r\n              <a href=\"#\" className=\"underline underline-offset-4\">\r\n                Sign up\r\n              </a>\r\n            </div>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/blocks/login-form.tsx"
    },
    {
      "path": "components/ui/8bit/button.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport { Button as ShadcnButton } from \"@/components/ui/button\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const buttonVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n    variant: {\r\n      default: \"bg-foreground\",\r\n      destructive: \"bg-foreground\",\r\n      outline: \"bg-foreground\",\r\n      secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n      ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n      link: \"text-primary underline-offset-4 hover:underline\",\r\n    },\r\n    size: {\r\n      default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n      sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n      lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n      icon: \"size-9\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n    size: \"default\",\r\n  },\r\n});\r\n\r\nexport interface BitButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n  ref?: React.Ref<HTMLButtonElement>;\r\n}\r\n\r\nfunction Button({ children, asChild, ...props }: BitButtonProps) {\r\n  const { variant, size, className, font } = props;\r\n\r\n  return (\r\n    <ShadcnButton\r\n      {...props}\r\n      className={cn(\r\n        \"rounded-none active:translate-y-1 transition-transform relative inline-flex items-center justify-center gap-1.5\",\r\n        font !== \"normal\" && \"retro\",\r\n        className\r\n      )}\r\n      size={size}\r\n      variant={variant}\r\n      asChild={asChild}\r\n    >\r\n      {asChild ? (\r\n        <span className=\"relative inline-flex items-center justify-center gap-1.5\">\r\n          {children}\r\n\r\n          {variant !== \"ghost\" && variant !== \"link\" && size !== \"icon\" && (\r\n            <>\r\n              {/* Pixelated border */}\r\n              <div className=\"absolute -top-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -top-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -bottom-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -bottom-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute bottom-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute bottom-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-1.5 -left-1.5 h-2/3 w-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-1.5 -right-1.5 h-2/3 w-1.5 bg-foreground dark:bg-ring\" />\r\n              {variant !== \"outline\" && (\r\n                <>\r\n                  {/* Top shadow */}\r\n                  <div className=\"absolute top-0 left-0 w-full h-1.5 bg-foreground/20\" />\r\n                  <div className=\"absolute top-1.5 left-0 w-3 h-1.5 bg-foreground/20\" />\r\n\r\n                  {/* Bottom shadow */}\r\n                  <div className=\"absolute bottom-0 left-0 w-full h-1.5 bg-foreground/20\" />\r\n                  <div className=\"absolute bottom-1.5 right-0 w-3 h-1.5 bg-foreground/20\" />\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {size === \"icon\" && (\r\n            <>\r\n              <div className=\"absolute top-0 left-0 w-full h-[5px] md:h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-0 w-full h-[5px] md:h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute top-1 -left-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-1 -left-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute top-1 -right-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-1 -right-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n            </>\r\n          )}\r\n        </span>\r\n      ) : (\r\n        <>\r\n          {children}\r\n\r\n          {variant !== \"ghost\" && variant !== \"link\" && size !== \"icon\" && (\r\n            <>\r\n              {/* Pixelated border */}\r\n              <div className=\"absolute -top-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -top-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -bottom-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -bottom-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute bottom-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute bottom-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-1.5 -left-1.5 h-2/3 w-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-1.5 -right-1.5 h-2/3 w-1.5 bg-foreground dark:bg-ring\" />\r\n              {variant !== \"outline\" && (\r\n                <>\r\n                  {/* Top shadow */}\r\n                  <div className=\"absolute top-0 left-0 w-full h-1.5 bg-foreground/20\" />\r\n                  <div className=\"absolute top-1.5 left-0 w-3 h-1.5 bg-foreground/20\" />\r\n\r\n                  {/* Bottom shadow */}\r\n                  <div className=\"absolute bottom-0 left-0 w-full h-1.5 bg-foreground/20\" />\r\n                  <div className=\"absolute bottom-1.5 right-0 w-3 h-1.5 bg-foreground/20\" />\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {size === \"icon\" && (\r\n            <>\r\n              <div className=\"absolute top-0 left-0 w-full h-[5px] md:h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-0 w-full h-[5px] md:h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute top-1 -left-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-1 -left-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute top-1 -right-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-1 -right-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </ShadcnButton>\r\n  );\r\n}\r\n\r\nexport { Button };\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/button.tsx"
    },
    {
      "path": "components/ui/8bit/card.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport {\r\n  Card as ShadcnCard,\r\n  CardAction as ShadcnCardAction,\r\n  CardContent as ShadcnCardContent,\r\n  CardDescription as ShadcnCardDescription,\r\n  CardFooter as ShadcnCardFooter,\r\n  CardHeader as ShadcnCardHeader,\r\n  CardTitle as ShadcnCardTitle,\r\n} from \"@/components/ui/card\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const cardVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    font: \"retro\",\r\n  },\r\n});\r\n\r\nexport interface BitCardProps\r\n  extends React.ComponentProps<\"div\">,\r\n    VariantProps<typeof cardVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction Card({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"relative border-y-6 border-foreground dark:border-ring !p-0\",\r\n        className\r\n      )}\r\n    >\r\n      <ShadcnCard\r\n        {...props}\r\n        className={cn(\r\n          \"rounded-none border-0 !w-full\",\r\n          font !== \"normal\" && \"retro\",\r\n          className\r\n        )}\r\n      />\r\n\r\n      <div\r\n        className=\"absolute inset-0 border-x-6 -mx-1.5 border-foreground dark:border-ring pointer-events-none\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CardHeader({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardHeader\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardTitle({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardTitle\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardDescription({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardDescription\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardAction({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardAction\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardContent({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardContent\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardFooter({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardFooter\r\n      data-slot=\"card-footer\"\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n};\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/card.tsx"
    },
    {
      "path": "components/ui/8bit/input.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport { Input as ShadcnInput } from \"@/components/ui/input\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const inputVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    font: \"retro\",\r\n  },\r\n});\r\n\r\nexport interface BitInputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement>,\r\n    VariantProps<typeof inputVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction Input({ ...props }: BitInputProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"relative border-y-6 border-foreground dark:border-ring !p-0 flex items-center\",\r\n        className\r\n      )}\r\n    >\r\n      <ShadcnInput\r\n        {...props}\r\n        className={cn(\r\n          \"rounded-none ring-0 !w-full\",\r\n          font !== \"normal\" && \"retro\",\r\n          className\r\n        )}\r\n      />\r\n\r\n      <div\r\n        className=\"absolute inset-0 border-x-6 -mx-1.5 border-foreground dark:border-ring pointer-events-none\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Input };\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/input.tsx"
    },
    {
      "path": "components/ui/8bit/label.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport { Label as ShadcnLabel } from \"@/components/ui/label\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const inputVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    font: \"retro\",\r\n  },\r\n});\r\n\r\ninterface BitLabelProps\r\n  extends React.ComponentProps<typeof LabelPrimitive.Root>,\r\n    VariantProps<typeof inputVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction Label({ className, font, ...props }: BitLabelProps) {\r\n  return (\r\n    <ShadcnLabel\r\n      className={cn(className, font !== \"normal\" && \"retro\")}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Label };\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/label.tsx"
    },
    {
      "path": "components/ui/8bit/styles/retro.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\r\n\r\n.retro {\r\n  font-family:\r\n    \"Press Start 2P\",\r\n    system-ui,\r\n    -apple-system,\r\n    sans-serif;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/styles/retro.css"
    }
  ]
}