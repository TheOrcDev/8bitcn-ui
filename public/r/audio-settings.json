{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "audio-settings",
  "type": "registry:component",
  "title": "8-bit Audio Settings",
  "description": "A simple 8-bit audio settings component",
  "registryDependencies": [
    "button",
    "card",
    "label"
  ],
  "files": [
    {
      "path": "components/ui/8bit/blocks/audio-settings.tsx",
      "content": "import { cn } from \"@/lib/utils\";\n\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/8bit/card\";\nimport { Label } from \"@/components/ui/8bit/label\";\nimport { Slider } from \"@/components/ui/8bit/slider\";\nimport { Switch } from \"@/components/ui/8bit/switch\";\n\nexport default function AudioSettings({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-sm font-medium\">Audio Settings</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-4\">\n            <Label htmlFor=\"volume\">Master Volume</Label>\n            <Slider\n              id=\"volume\"\n              defaultValue={[75]}\n              max={100}\n              step={1}\n              className=\"w-full\"\n            />\n          </div>\n          <div className=\"space-y-4\">\n            <Label htmlFor=\"sfx\">SFX Volume</Label>\n            <Slider\n              id=\"sfx\"\n              defaultValue={[60]}\n              max={100}\n              step={1}\n              className=\"w-full\"\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <Label htmlFor=\"mute\">Mute Audio</Label>\n            <Switch id=\"mute\" />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <Label htmlFor=\"vibration\">Vibration</Label>\n            <Switch id=\"vibration\" defaultChecked />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/ui/8bit/blocks/audio-settings.tsx"
    },
    {
      "path": "components/ui/8bit/styles/retro.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\n.retro {\n  font-family:\n    \"Press Start 2P\",\n    system-ui,\n    -apple-system,\n    sans-serif;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n}\n",
      "type": "registry:component",
      "target": "components/ui/8bit/styles/retro.css"
    },
    {
      "path": "components/ui/8bit/switch.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"relative peer data-[state=checked]:bg-primary rounded-xs data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 border border-foreground dark:border-ring ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n\n      <div\n        className=\"absolute inset-0 border-y-4 -my-1 border-foreground dark:border-ring pointer-events-none\"\n        aria-hidden=\"true\"\n      />\n\n      <div\n        className=\"absolute inset-0 border-x-4 -mx-1 border-foreground dark:border-ring pointer-events-none\"\n        aria-hidden=\"true\"\n      />\n    </SwitchPrimitive.Root>\n  );\n}\n\nexport { Switch };\n",
      "type": "registry:component",
      "target": "components/ui/8bit/switch.tsx"
    },
    {
      "path": "components/ui/8bit/card.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport {\n  Card as ShadcnCard,\n  CardAction as ShadcnCardAction,\n  CardContent as ShadcnCardContent,\n  CardDescription as ShadcnCardDescription,\n  CardFooter as ShadcnCardFooter,\n  CardHeader as ShadcnCardHeader,\n  CardTitle as ShadcnCardTitle,\n} from \"@/components/ui/card\";\n\nimport \"./styles/retro.css\";\n\nexport const cardVariants = cva(\"\", {\n  variants: {\n    font: {\n      normal: \"\",\n      retro: \"retro\",\n    },\n  },\n  defaultVariants: {\n    font: \"retro\",\n  },\n});\n\nexport interface BitCardProps\n  extends React.ComponentProps<\"div\">,\n    VariantProps<typeof cardVariants> {\n  asChild?: boolean;\n}\n\nfunction Card({ ...props }: BitCardProps) {\n  const { className, font } = props;\n\n  return (\n    <div\n      className={cn(\n        \"relative border-y-6 border-foreground dark:border-ring !p-0\",\n        className\n      )}\n    >\n      <ShadcnCard\n        {...props}\n        className={cn(\n          \"rounded-none border-0 !w-full\",\n          font !== \"normal\" && \"retro\",\n          className\n        )}\n      />\n\n      <div\n        className=\"absolute inset-0 border-x-6 -mx-1.5 border-foreground dark:border-ring pointer-events-none\"\n        aria-hidden=\"true\"\n      />\n    </div>\n  );\n}\n\nfunction CardHeader({ ...props }: BitCardProps) {\n  const { className, font } = props;\n\n  return (\n    <ShadcnCardHeader\n      className={cn(font !== \"normal\" && \"retro\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({ ...props }: BitCardProps) {\n  const { className, font } = props;\n\n  return (\n    <ShadcnCardTitle\n      className={cn(font !== \"normal\" && \"retro\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ ...props }: BitCardProps) {\n  const { className, font } = props;\n\n  return (\n    <ShadcnCardDescription\n      className={cn(font !== \"normal\" && \"retro\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardAction({ ...props }: BitCardProps) {\n  const { className, font } = props;\n\n  return (\n    <ShadcnCardAction\n      className={cn(font !== \"normal\" && \"retro\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({ ...props }: BitCardProps) {\n  const { className, font } = props;\n\n  return (\n    <ShadcnCardContent\n      className={cn(font !== \"normal\" && \"retro\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardFooter({ ...props }: BitCardProps) {\n  const { className, font } = props;\n\n  return (\n    <ShadcnCardFooter\n      data-slot=\"card-footer\"\n      className={cn(font !== \"normal\" && \"retro\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n};\n",
      "type": "registry:component",
      "target": "components/ui/8bit/card.tsx"
    },
    {
      "path": "components/ui/8bit/slider.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport * as SliderPrimitive from \"@radix-ui/react-slider\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Slider = React.forwardRef<\n  React.ComponentRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"relative w-full\", className)}>\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn(\n        \"relative flex w-full touch-none select-none items-center\",\n        className\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden bg-secondary\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n      </SliderPrimitive.Track>\n      <SliderPrimitive.Thumb className=\"block size-5 border-2 border-foreground dark:border-ring bg-foreground dark:bg-ring ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-0 focus-visible:ring-offset-0 disabled:pointer-events-none disabled:opacity-50\" />\n    </SliderPrimitive.Root>\n\n    <div\n      className=\"absolute inset-0 border-y-4 -my-1 border-foreground dark:border-ring pointer-events-none\"\n      aria-hidden=\"true\"\n    />\n\n    <div\n      className=\"absolute inset-0 border-x-4 -mx-1 border-foreground dark:border-ring pointer-events-none\"\n      aria-hidden=\"true\"\n    />\n  </div>\n));\nSlider.displayName = SliderPrimitive.Root.displayName;\n\nexport { Slider };\n",
      "type": "registry:component",
      "target": "components/ui/8bit/slider.tsx"
    },
    {
      "path": "components/ui/8bit/label.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { Label as ShadcnLabel } from \"@/components/ui/label\";\n\nimport \"./styles/retro.css\";\n\nexport const inputVariants = cva(\"\", {\n  variants: {\n    font: {\n      normal: \"\",\n      retro: \"retro\",\n    },\n  },\n  defaultVariants: {\n    font: \"retro\",\n  },\n});\n\ninterface BitLabelProps\n  extends React.ComponentProps<typeof LabelPrimitive.Root>,\n    VariantProps<typeof inputVariants> {\n  asChild?: boolean;\n}\n\nfunction Label({ className, font, ...props }: BitLabelProps) {\n  return (\n    <ShadcnLabel\n      className={cn(className, font !== \"normal\" && \"retro\")}\n      {...props}\n    />\n  );\n}\n\nexport { Label };\n",
      "type": "registry:component",
      "target": "components/ui/8bit/label.tsx"
    }
  ]
}