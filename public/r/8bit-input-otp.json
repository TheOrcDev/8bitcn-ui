{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "8bit-input-otp",
  "type": "registry:component",
  "title": "8-bit Input OTP",
  "description": "Accessible one-time password component with copy paste functionality in 8-bit style",
  "registryDependencies": [
    "input-otp"
  ],
  "files": [
    {
      "path": "components/ui/8bit/input-otp.tsx",
      "content": "import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Press_Start_2P } from \"next/font/google\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst pressStart = Press_Start_2P({\n  weight: [\"400\"],\n  subsets: [\"latin\"],\n})\n\nconst inputOTPVariants = cva(\"\", {\n  variants: {\n    font: {\n      normal: \"\",\n      retro: pressStart.className,\n    },\n  },\n  defaultVariants: {\n    font: \"retro\",\n  },\n})\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput> & \n  VariantProps<typeof inputOTPVariants>\n>(({ className, containerClassName, font, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\n      \"disabled:cursor-not-allowed\",\n      font !== \"normal\" && pressStart.className,\n      className\n    )}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center gap-2\", className)}\n    {...props}\n  />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div className={cn(\"relative\", className)}>\n      <div\n        ref={ref}\n        className={cn(\n          \"relative flex h-10 w-10 items-center justify-center rounded-none text-sm transition-all\",\n          \"bg-background border-none outline-none ring-0\",\n          isActive && \"z-10\",\n          className\n        )}\n        {...props}\n      >\n        {char}\n        {hasFakeCaret && (\n          <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n            <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n          </div>\n        )}\n      </div>\n      \n      {/* 8-bit border elements */}\n      <div className=\"absolute top-0 left-0 w-full h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\n      <div className=\"absolute bottom-0 w-full h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\n      <div className=\"absolute top-1 -left-1 w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\n      <div className=\"absolute bottom-1 -left-1 w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\n      <div className=\"absolute top-1 -right-1 w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\n      <div className=\"absolute bottom-1 -right-1 w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"separator\"\n    aria-orientation=\"vertical\"\n    className={cn(\n      \"flex h-5 w-5 items-center justify-center text-muted-foreground\",\n      pressStart.className,\n      className\n    )}\n    {...props}\n  >\n    <div className=\"h-1 w-1 rounded-none bg-muted-foreground\" />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }",
      "type": "registry:component",
      "target": "components/ui/8bit/input-otp.tsx"
    }
  ]
} 