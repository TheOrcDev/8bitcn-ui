{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "8bit-pagination",
  "type": "registry:component",
  "title": "8-bit Pagination",
  "description": "A simple 8-bit pagination component",
  "registryDependencies": [
    "pagination"
  ],
  "files": [
    {
      "path": "components/ui/8bit/pagination.tsx",
      "content": "import { Press_Start_2P } from \"next/font/google\"\r\nimport { cva, VariantProps } from \"class-variance-authority\"\r\nimport { MoreHorizontal } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport {\r\n  Pagination as ShadcnPagination,\r\n  PaginationContent as ShadcnPaginationContent,\r\n  PaginationEllipsis as ShadcnPaginationEllipsis,\r\n  PaginationItem as ShadcnPaginationItem,\r\n  PaginationLink as ShadcnPaginationLink,\r\n} from \"@/components/ui/pagination\"\r\n\r\nimport { Button } from \"../button\"\r\n\r\nconst pressStart = Press_Start_2P({\r\n  weight: [\"400\"],\r\n  subsets: [\"latin\"],\r\n})\r\n\r\nexport const paginationVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: pressStart.className,\r\n    },\r\n    variant: {\r\n      default: \"text-card-foreground\",\r\n      destructive:\r\n        \"text-destructive [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n})\r\n\r\nexport type BitPaginationProps<T extends React.ElementType> =\r\n  React.ComponentPropsWithoutRef<T> & VariantProps<typeof paginationVariants>\r\n\r\nfunction Pagination({ ...props }: BitPaginationProps<\"nav\">) {\r\n  const { variant, className, font } = props\r\n  return (\r\n    <ShadcnPagination\r\n      {...props}\r\n      className={cn(\r\n        paginationVariants({ variant }),\r\n        font !== \"normal\" && pressStart.className,\r\n        className\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nconst ChevronLeftIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"50\"\r\n      height=\"50\"\r\n      viewBox=\"0 0 256 256\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"0.25\"\r\n      color=\"\"\r\n      className=\"size-7\"\r\n      aria-label=\"chevron-left\"\r\n    >\r\n      <rect\r\n        width=\"14\"\r\n        height=\"14\"\r\n        rx=\"1\"\r\n        transform=\"matrix(-1 0 0 1 128 136)\"\r\n      ></rect>\r\n      <rect\r\n        width=\"14\"\r\n        height=\"14\"\r\n        rx=\"1\"\r\n        transform=\"matrix(-1 0 0 1 144 152)\"\r\n      ></rect>\r\n      <rect\r\n        width=\"14\"\r\n        height=\"14\"\r\n        rx=\"1\"\r\n        transform=\"matrix(-1 0 0 1 160 72)\"\r\n      ></rect>\r\n      <rect\r\n        width=\"14\"\r\n        height=\"14\"\r\n        rx=\"1\"\r\n        transform=\"matrix(-1 0 0 1 160 168)\"\r\n      ></rect>\r\n      <rect\r\n        width=\"14\"\r\n        height=\"14\"\r\n        rx=\"1\"\r\n        transform=\"matrix(-1 0 0 1 112 120)\"\r\n      ></rect>\r\n      <rect\r\n        width=\"14\"\r\n        height=\"14\"\r\n        rx=\"1\"\r\n        transform=\"matrix(-1 0 0 1 128 104)\"\r\n      ></rect>\r\n      <rect\r\n        width=\"14\"\r\n        height=\"14\"\r\n        rx=\"1\"\r\n        transform=\"matrix(-1 0 0 1 144 88)\"\r\n      ></rect>\r\n    </svg>\r\n  )\r\n}\r\n\r\nconst ChevronRightIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"50\"\r\n      height=\"50\"\r\n      viewBox=\"0 0 256 256\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"0.25\"\r\n      color=\"\"\r\n      className=\"raster-icon size-7\"\r\n      aria-label=\"chevron-right\"\r\n    >\r\n      <rect x=\"128\" y=\"136\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"112\" y=\"152\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"96\" y=\"72\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"96\" y=\"168\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"144\" y=\"120\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"128\" y=\"104\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"112\" y=\"88\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n    </svg>\r\n  )\r\n}\r\n\r\nfunction PaginationContent({ ...props }: BitPaginationProps<\"ul\">) {\r\n  const { className, font } = props\r\n  return (\r\n    <ShadcnPaginationContent\r\n      className={cn(\r\n        \"gap-2\",\r\n        font !== \"normal\" && pressStart.className,\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction PaginationItem({ ...props }: BitPaginationProps<\"li\">) {\r\n  const { className, font } = props\r\n  return (\r\n    <ShadcnPaginationItem\r\n      className={cn(font !== \"normal\" && pressStart.className, className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ntype PaginationLinkProps = {\r\n  isActive?: boolean\r\n} & Pick<React.ComponentProps<typeof Button>, \"size\"> &\r\n  BitPaginationProps<\"a\">\r\n\r\nfunction PaginationLink({ ...props }: PaginationLinkProps) {\r\n  const { font, children, isActive, className } = props\r\n  return (\r\n    <ShadcnPaginationLink\r\n      className={cn(\r\n        font !== \"normal\" && pressStart.className,\r\n        className,\r\n        \"relative group\",\r\n        \"bg-transparent hover:bg-transparent active:bg-transparent focus:bg-transparent\",\r\n        \"rounded-none border-dashed border-y-4 border-transparent\",\r\n        \"dark:hover:border-ring dark:focus:border-ring\",\r\n        \"hover:border-foreground focus:border-foreground\",\r\n        \"active:border-transparent\",\r\n        \"data-[active=true]:border-none aria-[current=page]:border-none\"\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n\r\n      {isActive && (\r\n        <div\r\n          className=\"absolute inset-0 w-full h-full pointer-events-none\"\r\n          style={{ zIndex: 10 }}\r\n        >\r\n          <div\r\n            className=\"absolute top-0 left-0 w-full h-1.5 bg-foreground dark:bg-ring pointer-events-none\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          <div\r\n            className=\"absolute left-0 bottom-0 w-full h-1.5 bg-foreground dark:bg-ring pointer-events-none\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          <div\r\n            className=\"absolute top-1 -left-1 w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          <div\r\n            className=\"absolute bottom-1 -left-1 w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          <div\r\n            className=\"absolute top-1 -right-1 w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          <div\r\n            className=\"absolute bottom-1 -right-1 w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </div>\r\n      )}\r\n    </ShadcnPaginationLink>\r\n  )\r\n}\r\n\r\nfunction PaginationPrevious({\r\n  ...props\r\n}: React.ComponentProps<typeof PaginationLink>) {\r\n  const { font, className } = props\r\n  return (\r\n    <PaginationLink\r\n      className={cn(\r\n        \"relative group\",\r\n        \"flex flex-row w-full text-sm\",\r\n        \"bg-transparent hover:bg-transparent active:bg-transparent focus:bg-transparent\",\r\n        \"rounded-none border-dashed border-y-4 border-transparent\",\r\n        \"hover:border-foreground focus:border-foreground active:border-transparent\",\r\n        \"dark:hover:border-ring dark:focus:border-ring\",\r\n        \"data-[active=true]:border-none aria-[current=page]:border-none\",\r\n        font !== \"normal\" && pressStart.className,\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <ChevronLeftIcon />\r\n      <span className=\"hidden sm:block\">Previous</span>\r\n    </PaginationLink>\r\n  )\r\n}\r\n\r\nfunction PaginationNext({\r\n  ...props\r\n}: React.ComponentProps<typeof PaginationLink>) {\r\n  const { font, className } = props\r\n\r\n  return (\r\n    <PaginationLink\r\n      className={cn(\r\n        \"relative group\",\r\n        \"flex flex-row w-full text-sm\",\r\n        \"bg-transparent hover:bg-transparent active:bg-transparent focus:bg-transparent\",\r\n        \"rounded-none border-dashed border-y-4 border-transparent\",\r\n        \"hover:border-foreground focus:border-foreground active:border-transparent\",\r\n        \"dark:hover:border-ring dark:focus:border-ring\",\r\n        \"data-[active=true]:border-none aria-[current=page]:border-none\",\r\n        \"flex flex-row text-sm w-full\",\r\n        font !== \"normal\" && pressStart.className,\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <span className=\"hidden sm:block\">Next</span>\r\n      <ChevronRightIcon />\r\n    </PaginationLink>\r\n  )\r\n}\r\n\r\nfunction PaginationEllipsis({ ...props }: BitPaginationProps<\"span\">) {\r\n  const { font, className } = props\r\n\r\n  return (\r\n    <ShadcnPaginationEllipsis\r\n      className={cn(font !== \"normal\" && pressStart.className, className)}\r\n      {...props}\r\n    >\r\n      <MoreHorizontal className={cn(\"size-7\", pressStart.className)} />\r\n      <span className=\"sr-only\">More pages</span>\r\n    </ShadcnPaginationEllipsis>\r\n  )\r\n}\r\n\r\nexport {\r\n  Pagination,\r\n  PaginationContent,\r\n  PaginationLink,\r\n  PaginationItem,\r\n  PaginationPrevious,\r\n  PaginationNext,\r\n  PaginationEllipsis,\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/pagination.tsx"
    }
  ]
}