{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "8bit-calendar",
  "type": "registry:component",
  "title": "8-bit Calendar",
  "description": "A simple 8-bit calendar component",
  "registryDependencies": [
    "calendar"
  ],
  "files": [
    {
      "path": "components/ui/8bit/calendar.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\nimport { DayPicker } from \"react-day-picker\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport { Calendar as ShadcnCalendar } from \"@/components/ui/calendar\";\r\nimport { ChevronLeftIcon } from \"@/components/ui/8bit/assets/chevronLeftIcon\";\r\nimport { ChevronRightIcon } from \"@/components/ui/8bit/assets/chevronRightIcon\";\r\n\r\nimport { buttonVariants } from \"./button\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"./select\";\r\nimport \"./styles/retro.css\";\r\n\r\nexport const calendarVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    font: \"retro\",\r\n  },\r\n});\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> &\r\n  VariantProps<typeof calendarVariants>;\r\n\r\nfunction Calendar({ className, classNames, font, ...props }: CalendarProps) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"bg-popover relative border-y-6 border-foreground dark:border-ring w-max\",\r\n        className\r\n      )}\r\n    >\r\n      <ShadcnCalendar\r\n        className={cn(\r\n          calendarVariants({\r\n            className,\r\n            font,\r\n          })\r\n        )}\r\n        classNames={{\r\n          nav_button: cn(\r\n            buttonVariants({ variant: \"outline\" }),\r\n            \"size-7 bg-transparent p-0 flex items-center justify-center hover:opacity-50 border-2 border-foreground dark:border-ring\"\r\n          ),\r\n          day_button: cn(\r\n            buttonVariants({ variant: \"ghost\" }),\r\n            \"h-10 font-normal aria-selected:opacity-100\"\r\n          ),\r\n          day: cn(\r\n            \"relative w-full h-full p-0 text-center [&:first-child[data-selected=true]_button]:rounded-l-md [&:last-child[data-selected=true]_button]:rounded-r-md group/day select-none\"\r\n          ),\r\n          caption_label: \"text-xs font-medium\",\r\n          ...classNames,\r\n        }}\r\n        components={{\r\n          MonthsDropdown: ({ className, ...props }) => {\r\n            const currentMonth = props.value as number;\r\n\r\n            const months = [\r\n              \"January\",\r\n              \"February\",\r\n              \"March\",\r\n              \"April\",\r\n              \"May\",\r\n              \"June\",\r\n              \"July\",\r\n              \"August\",\r\n              \"September\",\r\n              \"October\",\r\n              \"November\",\r\n              \"December\",\r\n            ];\r\n\r\n            const currentMonthName = months[currentMonth];\r\n\r\n            return (\r\n              <div className={cn(\"flex flex-col gap-3 text-xs\", className)}>\r\n                <Select defaultValue={currentMonthName}>\r\n                  <SelectTrigger id=\"dropdown\" className=\"bg-background w-full\">\r\n                    <SelectValue placeholder=\"Dropdown\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent align=\"center\">\r\n                    {months.map((month) => (\r\n                      <SelectItem key={month} value={month}>\r\n                        {month}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            );\r\n          },\r\n          YearsDropdown: ({ className }) => {\r\n            const currentYear = new Date().getFullYear();\r\n            const years = Array.from(\r\n              { length: currentYear - 1925 + 1 },\r\n              (_, i) => 1925 + i\r\n            );\r\n\r\n            return (\r\n              <div className={cn(\"flex flex-col gap-3 text-xs\", className)}>\r\n                <Select defaultValue={currentYear?.toString()}>\r\n                  <SelectTrigger id=\"dropdown\" className=\"bg-background w-full\">\r\n                    <SelectValue placeholder=\"Dropdown\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent align=\"center\">\r\n                    {years.map((year) => (\r\n                      <SelectItem key={year} value={year.toString()}>\r\n                        {year}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            );\r\n          },\r\n          Chevron: ({ className, ...props }) => {\r\n            if (props.orientation === \"left\") {\r\n              return (\r\n                <ChevronLeftIcon/>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <ChevronRightIcon/>\r\n            );\r\n          },\r\n        }}\r\n        {...props}\r\n      />\r\n\r\n      <div\r\n        className=\"absolute inset-0 border-x-6 -mx-1.5 border-foreground dark:border-ring pointer-events-none\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Calendar };\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/calendar.tsx"
    },
    {
      "path": "components/ui/8bit/styles/retro.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\r\n\r\n.retro {\r\n  font-family:\r\n    \"Press Start 2P\",\r\n    system-ui,\r\n    -apple-system,\r\n    sans-serif;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/styles/retro.css"
    }
  ]
}