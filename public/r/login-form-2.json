{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "login-form-2",
  "type": "registry:component",
  "title": "8-bit Login Form 2",
  "description": "A simple 8-bit login form component",
  "registryDependencies": [
    "button",
    "card",
    "input",
    "label"
  ],
  "files": [
    {
      "path": "components/ui/8bit/blocks/login-form-2.tsx",
      "content": "import { cn } from \"@/lib/utils\";\r\n\r\nimport { Button } from \"@/components/ui/8bit/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/8bit/card\";\r\nimport { Input } from \"@/components/ui/8bit/input\";\r\nimport { Label } from \"@/components/ui/8bit/label\";\r\n\r\nimport \"../styles/retro.css\";\r\n\r\nexport function LoginForm({\r\n  className,\r\n  ...props\r\n}: React.ComponentPropsWithoutRef<\"div\">) {\r\n  return (\r\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n      <Card>\r\n        <CardHeader className=\"text-center\">\r\n          <CardTitle className=\"text-xl\">Welcome back</CardTitle>\r\n          <CardDescription className=\"text-xs\">\r\n            Login with your Apple or Google account\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form>\r\n            <div className=\"grid gap-6\">\r\n              <div className=\"flex flex-col gap-4\">\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                    <path\r\n                      d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                      fill=\"currentColor\"\r\n                    />\r\n                  </svg>\r\n                  Login with Apple\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                    <path\r\n                      d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                      fill=\"currentColor\"\r\n                    />\r\n                  </svg>\r\n                  Login with Google\r\n                </Button>\r\n              </div>\r\n              <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\r\n                  Or continue with\r\n                </span>\r\n              </div>\r\n              <div className=\"grid gap-6\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"email\">Email</Label>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"m@example.com\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <div className=\"flex items-center\">\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"ml-auto text-xs underline-offset-4 hover:underline\"\r\n                    >\r\n                      Forgot password?\r\n                    </a>\r\n                  </div>\r\n                  <Input id=\"password\" type=\"password\" required />\r\n                </div>\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                  Login\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center text-xs\">\r\n                Don&apos;t have an account?{\" \"}\r\n                <a href=\"#\" className=\"underline underline-offset-4\">\r\n                  Sign up\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n      <div\r\n        className={`${\"retro\"} text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 [&_a]:hover:text-primary`}\r\n      >\r\n        <a href=\"#\">Terms of Service</a> and <a href=\"#\">Privacy Policy</a>.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/blocks/login-form-2.tsx"
    },
    {
      "path": "components/ui/8bit/button.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport { Button as ShadcnButton } from \"@/components/ui/button\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const buttonVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n    variant: {\r\n      default: \"bg-foreground\",\r\n      destructive: \"bg-foreground\",\r\n      outline: \"bg-foreground\",\r\n      secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n      ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n      link: \"text-primary underline-offset-4 hover:underline\",\r\n    },\r\n    size: {\r\n      default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n      sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n      lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n      icon: \"size-9\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n    size: \"default\",\r\n  },\r\n});\r\n\r\nexport interface BitButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n  ref?: React.Ref<HTMLButtonElement>;\r\n}\r\n\r\nfunction Button({ children, asChild, ...props }: BitButtonProps) {\r\n  const { variant, size, className, font } = props;\r\n\r\n  return (\r\n    <ShadcnButton\r\n      {...props}\r\n      className={cn(\r\n        \"rounded-none active:translate-y-1 transition-transform relative inline-flex items-center justify-center gap-1.5\",\r\n        font !== \"normal\" && \"retro\",\r\n        className\r\n      )}\r\n      size={size}\r\n      variant={variant}\r\n      asChild={asChild}\r\n    >\r\n      {asChild ? (\r\n        <span className=\"relative inline-flex items-center justify-center gap-1.5\">\r\n          {children}\r\n\r\n          {variant !== \"ghost\" && variant !== \"link\" && size !== \"icon\" && (\r\n            <>\r\n              {/* Pixelated border */}\r\n              <div className=\"absolute -top-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -top-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -bottom-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -bottom-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute bottom-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute bottom-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-1.5 -left-1.5 h-[calc(100%-12px)] w-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-1.5 -right-1.5 h-[calc(100%-12px)] w-1.5 bg-foreground dark:bg-ring\" />\r\n              {variant !== \"outline\" && (\r\n                <>\r\n                  {/* Top shadow */}\r\n                  <div className=\"absolute top-0 left-0 w-full h-1.5 bg-foreground/20\" />\r\n                  <div className=\"absolute top-1.5 left-0 w-3 h-1.5 bg-foreground/20\" />\r\n\r\n                  {/* Bottom shadow */}\r\n                  <div className=\"absolute bottom-0 left-0 w-full h-1.5 bg-foreground/20\" />\r\n                  <div className=\"absolute bottom-1.5 right-0 w-3 h-1.5 bg-foreground/20\" />\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {size === \"icon\" && (\r\n            <>\r\n              <div className=\"absolute top-0 left-0 w-full h-[5px] md:h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-0 w-full h-[5px] md:h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute top-1 -left-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-1 -left-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute top-1 -right-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-1 -right-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n            </>\r\n          )}\r\n        </span>\r\n      ) : (\r\n        <>\r\n          {children}\r\n\r\n          {variant !== \"ghost\" && variant !== \"link\" && size !== \"icon\" && (\r\n            <>\r\n              {/* Pixelated border */}\r\n              <div className=\"absolute -top-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -top-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -bottom-1.5 w-1/2 left-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute -bottom-1.5 w-1/2 right-1.5 h-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute bottom-0 left-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute bottom-0 right-0 size-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-1.5 -left-1.5 h-[calc(100%-12px)] w-1.5 bg-foreground dark:bg-ring\" />\r\n              <div className=\"absolute top-1.5 -right-1.5 h-[calc(100%-12px)] w-1.5 bg-foreground dark:bg-ring\" />\r\n              {variant !== \"outline\" && (\r\n                <>\r\n                  {/* Top shadow */}\r\n                  <div className=\"absolute top-0 left-0 w-full h-1.5 bg-foreground/20\" />\r\n                  <div className=\"absolute top-1.5 left-0 w-3 h-1.5 bg-foreground/20\" />\r\n\r\n                  {/* Bottom shadow */}\r\n                  <div className=\"absolute bottom-0 left-0 w-full h-1.5 bg-foreground/20\" />\r\n                  <div className=\"absolute bottom-1.5 right-0 w-3 h-1.5 bg-foreground/20\" />\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {size === \"icon\" && (\r\n            <>\r\n              <div className=\"absolute top-0 left-0 w-full h-[5px] md:h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-0 w-full h-[5px] md:h-1.5 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute top-1 -left-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-1 -left-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute top-1 -right-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n              <div className=\"absolute bottom-1 -right-1 w-[5px] md:w-1.5 h-1/2 bg-foreground dark:bg-ring pointer-events-none\" />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </ShadcnButton>\r\n  );\r\n}\r\n\r\nexport { Button };\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/button.tsx"
    },
    {
      "path": "components/ui/8bit/card.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport {\r\n  Card as ShadcnCard,\r\n  CardAction as ShadcnCardAction,\r\n  CardContent as ShadcnCardContent,\r\n  CardDescription as ShadcnCardDescription,\r\n  CardFooter as ShadcnCardFooter,\r\n  CardHeader as ShadcnCardHeader,\r\n  CardTitle as ShadcnCardTitle,\r\n} from \"@/components/ui/card\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const cardVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    font: \"retro\",\r\n  },\r\n});\r\n\r\nexport interface BitCardProps\r\n  extends React.ComponentProps<\"div\">,\r\n    VariantProps<typeof cardVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction Card({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"relative border-y-6 border-foreground dark:border-ring !p-0\",\r\n        className\r\n      )}\r\n    >\r\n      <ShadcnCard\r\n        {...props}\r\n        className={cn(\r\n          \"rounded-none border-0 !w-full\",\r\n          font !== \"normal\" && \"retro\",\r\n          className\r\n        )}\r\n      />\r\n\r\n      <div\r\n        className=\"absolute inset-0 border-x-6 -mx-1.5 border-foreground dark:border-ring pointer-events-none\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CardHeader({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardHeader\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardTitle({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardTitle\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardDescription({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardDescription\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardAction({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardAction\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardContent({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardContent\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardFooter({ ...props }: BitCardProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <ShadcnCardFooter\r\n      data-slot=\"card-footer\"\r\n      className={cn(font !== \"normal\" && \"retro\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n};\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/card.tsx"
    },
    {
      "path": "components/ui/8bit/input.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport { Input as ShadcnInput } from \"@/components/ui/input\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const inputVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    font: \"retro\",\r\n  },\r\n});\r\n\r\nexport interface BitInputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement>,\r\n    VariantProps<typeof inputVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction Input({ ...props }: BitInputProps) {\r\n  const { className, font } = props;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"relative border-y-6 border-foreground dark:border-ring !p-0 flex items-center\",\r\n        className\r\n      )}\r\n    >\r\n      <ShadcnInput\r\n        {...props}\r\n        className={cn(\r\n          \"rounded-none ring-0 !w-full\",\r\n          font !== \"normal\" && \"retro\",\r\n          className\r\n        )}\r\n      />\r\n\r\n      <div\r\n        className=\"absolute inset-0 border-x-6 -mx-1.5 border-foreground dark:border-ring pointer-events-none\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Input };\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/input.tsx"
    },
    {
      "path": "components/ui/8bit/label.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { type VariantProps, cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nimport { Label as ShadcnLabel } from \"@/components/ui/label\";\r\n\r\nimport \"./styles/retro.css\";\r\n\r\nexport const inputVariants = cva(\"\", {\r\n  variants: {\r\n    font: {\r\n      normal: \"\",\r\n      retro: \"retro\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    font: \"retro\",\r\n  },\r\n});\r\n\r\ninterface BitLabelProps\r\n  extends React.ComponentProps<typeof LabelPrimitive.Root>,\r\n    VariantProps<typeof inputVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction Label({ className, font, ...props }: BitLabelProps) {\r\n  return (\r\n    <ShadcnLabel\r\n      className={cn(className, font !== \"normal\" && \"retro\")}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Label };\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/label.tsx"
    },
    {
      "path": "components/ui/8bit/styles/retro.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\r\n\r\n.retro {\r\n  font-family:\r\n    \"Press Start 2P\",\r\n    system-ui,\r\n    -apple-system,\r\n    sans-serif;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/8bit/styles/retro.css"
    }
  ]
}