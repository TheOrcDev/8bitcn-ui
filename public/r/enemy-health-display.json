{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "enemy-health-display",
  "type": "registry:component",
  "title": "8-bit Enemy Health Display",
  "description": "A retro-styled enemy health display component with health bar, name, and level",
  "registryDependencies": ["health-bar"],
  "files": [
    {
      "path": "components/ui/8bit/enemy-health-display.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\nimport HealthBar from \"@/components/ui/8bit/health-bar\";\nimport \"./styles/retro.css\";\n\nexport const enemyHealthDisplayVariants = cva(\"\", {\n  variants: {\n    variant: {\n      default: \"\",\n      retro: \"retro\",\n    },\n    size: {\n      sm: \"text-xs\",\n      md: \"text-sm\", \n      lg: \"text-base\",\n    },\n    textColor: {\n      red: \"text-red-500\",\n      orange: \"text-orange-500\", \n      yellow: \"text-yellow-500\",\n      green: \"text-green-500\",\n      blue: \"text-blue-500\",\n      purple: \"text-purple-500\",\n    },\n  },\n  defaultVariants: {\n    variant: \"retro\",\n    size: \"md\",\n    textColor: \"red\",\n  },\n});\n\nexport interface EnemyHealthDisplayProps\n  extends React.ComponentProps<\"div\">,\n    VariantProps<typeof enemyHealthDisplayVariants> {\n  enemyName: string;\n  level?: number;\n  currentHealth: number;\n  maxHealth: number;\n  showLevel?: boolean;\n  showHealthText?: boolean;\n  healthBarVariant?: \"retro\" | \"default\";\n  healthBarColor?: string;\n}\n\nexport default function EnemyHealthDisplay({\n  className,\n  variant,\n  size,\n  textColor,\n  enemyName,\n  level,\n  currentHealth,\n  maxHealth,\n  showLevel = true,\n  showHealthText = true,\n  healthBarVariant = \"retro\",\n  healthBarColor = \"bg-red-500\",\n  ...props\n}: EnemyHealthDisplayProps) {\n  const healthPercentage = Math.max(0, Math.min(100, (currentHealth / maxHealth) * 100));\n  const healthText = `${currentHealth}/${maxHealth}`;\n\n  return (\n    <div\n      className={cn(\n        \"relative w-full space-y-2\",\n        enemyHealthDisplayVariants({ variant, size, textColor }),\n        className\n      )}\n      {...props}\n    >\n      {/* Enemy Name and Level */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"font-bold text-foreground\">{enemyName}</span>\n          {showLevel && level && (\n            <span className=\"text-muted-foreground\">Lv.{level}</span>\n          )}\n        </div>\n        {showHealthText && (\n          <span className=\"text-muted-foreground font-mono\">\n            {healthText}\n          </span>\n        )}\n      </div>\n\n      {/* Health Bar Container */}\n      <div className=\"relative\">\n        <HealthBar\n          value={healthPercentage}\n          variant={healthBarVariant}\n          className=\"w-full\"\n          props={{ progressBg: healthBarColor }}\n        />\n        \n        {/* Health percentage overlay for retro variant */}\n        {healthBarVariant === \"retro\" && (\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <span className=\"text-xs font-bold text-white drop-shadow-lg bg-black/50 px-1 rounded\">\n              {Math.round(healthPercentage)}%\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}",
      "type": "registry:component",
      "target": "components/ui/8bit/enemy-health-display.tsx"
    }
  ]
}